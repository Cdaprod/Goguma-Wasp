app Goguma {
  wasp: {
    version: "^0.14.0"
  },
  title: "Goguma",
  client: {
    rootComponent: import { Layout } from "@src/Layout.jsx",
  },
  auth: {
    userEntity: User,
    methods: {
      usernameAndPassword: {}
    },
    onAuthFailedRedirectTo: "/login",
    onAuthSucceededRedirectTo: "/"
  },
}

route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import Signup from "@src/pages/auth/Signup.jsx"
}

action createAlias {
  fn: import { createAlias } from "@src/actions.js",
  entities: [User, Alias]
}

action createReport {
  fn: import { createReport } from "@src/actions.js",
  entities: [User, Report, Alias]
}

action deleteAlias {
  fn: import { deleteAlias } from "@src/actions.js",
  entities: [User, Alias]
}

action updateReport {
  fn: import { updateReport } from "@src/actions.js",
  entities: [User, Report]
}

query getAliases {
  fn: import { getAliases } from "@src/queries.js",
  entities: [Alias, User]
}

query getReport {
  fn: import { getReport } from "@src/queries.js",
  entities: [Report, User]
}

route AliasRoute { path: "/alias", to: AliasPage }
page AliasPage {
  component: import AliasPage from "@src/pages/Alias.jsx",
  authRequired: true,
}

route ReportRoute { path: "/report/:reportId", to: ReportPage }
page ReportPage {
  component: import Report from "@src/pages/Report.jsx",
  authRequired: true,
}

route DashboardRoute { path: "/", to: DashboardPage }
page DashboardPage {
  component: import DashboardPage from "@src/pages/Dashboard.jsx",
  authRequired: true,
}